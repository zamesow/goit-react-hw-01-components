{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/StatisticsList.js","components/FriendListItem.js","components/FriendList.js","components/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","Statistics","label","percentage","StatisticsList","map","stat","id","FriendListItem","isOnline","width","FriendList","friends","friend","TransactionHistory","items","item","type","amount","currency","App","user","title","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8xGA2CeA,EAxCC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC5C,OACI,sBAAKC,MAAM,UAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBACIC,IAAKH,EACLI,IAAI,gHACJF,MAAM,WAEV,mBAAGA,MAAM,OAAT,SAAiBL,IACjB,mBAAGK,MAAM,MAAT,SAAgBJ,IAChB,mBAAGI,MAAM,WAAT,SAAqBH,OAGzB,qBAAIG,MAAM,QAAV,UACI,+BACI,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAElC,+BACI,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAElC,+BACI,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,kBCZnCC,EAdI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACzB,OACI,gCACI,sBAAMR,MAAM,QAAZ,SAAqBO,IACrB,uBAAMP,MAAM,aAAZ,UAA0BQ,EAA1B,WCgBGC,MApBf,YAAkC,IAATV,EAAQ,EAARA,MACrB,OACI,0BAASC,MAAM,aAAf,UACI,oBAAIA,MAAM,QAAV,4BAEA,oBAAIA,MAAM,YAAV,SACKD,EAAMW,KAAI,SAAAC,GAAI,OACX,oBAAIX,MAAM,OAAV,SACI,cAAC,EAAD,CACIO,MAAOI,EAAKJ,MACZC,WAAYG,EAAKH,cAHHG,EAAKC,a,OCQhCC,EAfQ,SAAC,GAAgC,IAA9Bf,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SACpC,OACI,gCACI,sBAAMd,MAAM,SAAZ,SAAsBc,IACtB,qBAAKd,MAAM,SAASC,IAAKH,EAAQI,IAAKP,EAAMoB,MAAM,OAClD,mBAAGf,MAAM,OAAT,SAAiBL,QCYdqB,MAjBf,YAAgC,IAAXC,EAAU,EAAVA,QACjB,OACI,oBAAIjB,MAAM,cAAV,SAEKiB,EAAQP,KAAI,SAAAQ,GAAM,OACf,oBAAIlB,MAAM,OAAV,SACI,cAAC,EAAD,CACIc,SAAUI,EAAOJ,SACjBhB,OAAQoB,EAAOpB,OACfH,KAAMuB,EAAOvB,QAJCuB,EAAON,U,OC6B9BO,EAlCY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACzB,OACI,wBAAOpB,MAAM,sBAAb,UACI,gCACI,+BACI,sCACA,wCACA,+CAIR,gCACKoB,EAAMV,KAAI,SAAAW,GAAI,OACX,+BACI,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,aAHLH,EAAKT,aCLnB,SAASa,IACpB,OACI,gCACI,cAAC,EAAD,CACI9B,KAAM+B,EAAK/B,KACXE,SAAU6B,EAAK7B,SACfD,IAAK8B,EAAK9B,IACVE,OAAQ4B,EAAK5B,OACbC,MAAO2B,EAAK3B,QAGhB,cAAC,EAAD,CAAgB4B,MAAM,eAAe5B,MAAO6B,IAG5C,cAAC,EAAD,CAAYX,QAASA,IAErB,cAAC,EAAD,CAAoBG,MAAOS,OCrBvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACP,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.52e990e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n    return (\n        <div class=\"profile\">\n            <div class=\"description\">\n                <img\n                    src={avatar}\n                    alt=\"Аватар пользователя\"\n                    class=\"avatar\"\n                />\n                <p class=\"name\">{name}</p>\n                <p class=\"tag\">{tag}</p>\n                <p class=\"location\">{location}</p>\n            </div>\n\n            <ul class=\"stats\">\n                <li>\n                    <span class=\"label\">Followers</span>\n                    <span class=\"quantity\">{stats.followers}</span>\n                </li>\n                <li>\n                    <span class=\"label\">Views</span>\n                    <span class=\"quantity\">{stats.views}</span>\n                </li>\n                <li>\n                    <span class=\"label\">Likes</span>\n                    <span class=\"quantity\">{stats.likes}</span>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.number.isRequired\n};\n\nexport default Profile;","import PropTypes from 'prop-types';\n\nconst Statistics = ({ label, percentage }) => {\n    return (\n        <div>\n            <span class=\"label\">{label}</span>\n            <span class=\"percentage\">{percentage}%</span>\n        </div>\n    );\n};\n\nStatistics.propTypes = {\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n};\n\nexport default Statistics;","import Statistics from './Statistics';\n\nfunction StatisticsList({stats}) {\n    return (\n        <section class=\"statistics\">\n            <h2 class=\"title\">\"Upload stats\"</h2>\n\n            <ul class=\"stat-list\">\n                {stats.map(stat => (\n                    <li class=\"item\" key={stat.id}>\n                        <Statistics\n                            label={stat.label}\n                            percentage={stat.percentage}\n                        />\n                    </li>\n                ))}\n            </ul>\n            \n        </section>\n    );\n};\n\nexport default StatisticsList;","import PropTypes from 'prop-types';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n    return (\n        <div>\n            <span class=\"status\">{isOnline}</span>\n            <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\n            <p class=\"name\">{name}</p>\n        </div>\n    );\n}\n\nFriendListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n};\n\nexport default FriendListItem;","import FriendListItem from './FriendListItem';\n\nfunction FriendList({friends}) {\n    return (\n        <ul class=\"friend-list\">\n            {/* Произвольное кол-во FriendListItem, в зависимости от кол-ва объектов в массиве */}\n            {friends.map(friend => (\n                <li class=\"item\" key={friend.id}>\n                    <FriendListItem\n                        isOnline={friend.isOnline}\n                        avatar={friend.avatar}\n                        name={friend.name}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default FriendList;","import PropTypes from 'prop-types';\n\nconst TransactionHistory = ({items}) => {\n    return (\n        <table class=\"transaction-history\">\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(item => (\n                    <tr key={item.id}>\n                        <td>{item.type}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.currency}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n    PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.number.isRequired,\n        currency: PropTypes.string.isRequired\n    }),\n  ),\n};\n\nexport default TransactionHistory;","import React from 'react';\nimport user from './js/user.json';\nimport statisticalData from './js/statistical-data.json';\nimport Profile from './components/Profile';\nimport StatisticsList from './components/StatisticsList';\nimport friends from './js/friends.json';\nimport FriendList from './components/FriendList';\nimport transactions from './js/transactions.json';\nimport TransactionHistory from './components/TransactionHistory';\n\nexport default function App() {\n    return (\n        <div>\n            <Profile\n                name={user.name}\n                location={user.location}\n                tag={user.tag}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n\n            <StatisticsList title=\"Upload stats\" stats={statisticalData} />\n            {/* <StatisticsList stats={statisticalData} />; */}\n\n            <FriendList friends={friends} />\n\n            <TransactionHistory items={transactions} />\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}